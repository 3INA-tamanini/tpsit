EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
flags.com_ -- emu8086 assembler version: 4.08  
 
[ 22/01/2024  --  15:07:41 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       name "flags"
[   2]        :                                       
[   3]        :                                       org 100h
[   4]        :                                       
[   5]        :                                       ; this sample shows how cmp instruction sets the flags.
[   6]        :                                       
[   7]        :                                       ; usually cmp instruction is followed by any relative
[   8]        :                                       ; jump instruction such as: je, ja, jl, jae...
[   9]        :                                       
[  10]        :                                       ; it is recommended to click "flags" and "analyze"
[  11]        :                                       ; for better visual expirience before stepping through this code.
[  12]        :                                       
[  13]        :                                       ; (signed/unsigned)
[  14]        :                                       ; 4 is equal to 4
[  15]    0100: B4 04                                 mov ah, 4
[  16]    0102: B0 04                                 mov al, 4
[  17]    0104: 3A E0                                 cmp ah, al
[  18]    0106: 90                                    nop
[  19]        :                                       
[  20]        :                                       ; (signed/unsigned)
[  21]        :                                       ; 4 is above and greater then 3
[  22]    0107: B4 04                                 mov ah, 4
[  23]    0109: B0 03                                 mov al, 3
[  24]    010B: 3A E0                                 cmp ah, al
[  25]    010D: 90                                    nop
[  26]        :                                       
[  27]        :                                       ; -5 = 251 = 0fbh
[  28]        :                                       
[  29]        :                                       ; (signed)
[  30]        :                                       ; 1 is greater then -5
[  31]    010E: B4 01                                 mov ah, 1
[  32]    0110: B0 FB                                 mov al, -5
[  33]    0112: 3A E0                                 cmp ah, al
[  34]    0114: 90                                    nop
[  35]        :                                       
[  36]        :                                       ; (unsigned)
[  37]        :                                       ; 1 is below 251
[  38]    0115: B4 01                                 mov ah, 1
[  39]    0117: B0 FB                                 mov al, 251
[  40]    0119: 3A E0                                 cmp ah, al
[  41]    011B: 90                                    nop
[  42]        :                                       
[  43]        :                                       ; (signed)
[  44]        :                                       ; -3 is less then -2
[  45]    011C: B4 FD                                 mov ah, -3
[  46]    011E: B0 FE                                 mov al, -2
[  47]    0120: 3A E0                                 cmp ah, al
[  48]    0122: 90                                    nop
[  49]        :                                       
[  50]        :                                       ; (signed)
[  51]        :                                       ; -2 is greater then -3
[  52]    0123: B4 FE                                 mov ah, -2
[  53]    0125: B0 FD                                 mov al, -3
[  54]    0127: 3A E0                                 cmp ah, al
[  55]    0129: 90                                    nop
[  56]        :                                       
[  57]        :                                       ; (unsigned)
[  58]        :                                       ; 255 is above 1
[  59]    012A: B4 FF                                 mov ah, 255
[  60]    012C: B0 01                                 mov al, 1
[  61]    012E: 3A E0                                 cmp ah, al
[  62]    0130: 90                                    nop
[  63]        :                                       
[  64]        :                                       ; now a little game:
[  65]    0131: BA 5E 01                              game:  mov dx, offset msg1
[  66]    0134: B4 09                                 mov ah, 9
[  67]    0136: CD 21                                 int 21h
[  68]        :                                       
[  69]        :                                       ; read character in al:
[  70]    0138: B4 01                                 mov ah, 1
[  71]    013A: CD 21                                 int 21h
[  72]        :                                       
[  73]    013C: 3C 30                                 cmp al, '0'
[  74]    013E: 72 1D                                 jb stop
[  75]        :                                       
[  76]    0140: 3C 39                                 cmp al, '9'
[  77]    0142: 77 19                                 ja stop
[  78]        :                                       
[  79]    0144: 3C 35                                 cmp al, '5'
[  80]    0146: 72 07                                 jb below
[  81]    0148: 77 0A                                 ja above
[  82]    014A: BA 8F 01                              mov dx, offset equal_5
[  83]    014D: EB 08                                 jmp print
[  84]    014F: BA A3 01                              below: mov dx, offset below_5
[  85]    0152: EB 03                                 jmp print
[  86]    0154: BA B5 01                              above: mov dx, offset above_5
[  87]    0157: B4 09                                 print: mov ah, 9
[  88]    0159: CD 21                                 int 21h
[  89]    015B: EB D4                                 jmp game  ; loop.
[  90]        :                                       
[  91]        :                                       
[  92]    015D: C3                                    stop: ret  ; stop
[  93]        :                                       
[  94]        :                                       
[  95]    015E: 65 6E 74 65 72 20 61 20 6E 75 6D 62   msg1 db "enter a number or any other character to exit:  $"
                65 72 20 6F 72 20 61 6E 79 20 6F 74 
                68 65 72 20 63 68 61 72 61 63 74 65 
                72 20 74 6F 20 65 78 69 74 3A 20 20 
                24                                  
[  96]    018F: 20 69 73 20 66 69 76 65 21 20 28 65   equal_5 db " is five! (equal)", 0Dh,0Ah, "$"
                71 75 61 6C 29 0D 0A 24             
[  97]    01A3: 20 69 73 20 62 65 6C 6F 77 20 66 69   below_5 db " is below five!" , 0Dh,0Ah, "$"
                76 65 21 0D 0A 24                   
[  98]    01B5: 20 69 73 20 61 62 6F 76 65 20 66 69   above_5 db " is above five!" , 0Dh,0Ah, "$"
                76 65 21 0D 0A 24                   
[  99]        :                                       
[ 100]        :                                       
[ 101]        :                                       
[ 102]        :                                       
 
===================================================================================================
 




===================================================================================================
